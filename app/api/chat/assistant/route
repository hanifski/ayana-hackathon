import { openai } from "@ai-sdk/openai";
import { streamText } from "ai";
import { Message } from "@/interfaces/chat";

// Allow streaming responses up to 30 seconds
export const maxDuration = 30;

export async function POST(req: Request) {
  try {
    console.log("API Keys loaded:", {
      openai: !!process.env.OPENAI_API_KEY,
    });

    const { messages, assistant_id } = await req.json();

    if (!assistant_id) {
      throw new Error("assistant_id is required");
    }

    const response = streamText({
      model: openai("gpt-3.5-turbo-instruct"),
      maxTokens: 512,
      temperature: 0.3,
      maxRetries: 5,
      messages: messages.map((message: Message) => ({
        role: message.role,
        content: message.content,
      })),
      assistant_id: assistant_id,
    });

    return response.toDataStreamResponse();
  } catch (error) {
    console.error("Error in chat API:", error);
    return new Response(
      JSON.stringify({ error: "An error occurred", details: error.message }),
      {
        status: 500,
        headers: { "Content-Type": "application/json" },
      }
    );
  }
}
